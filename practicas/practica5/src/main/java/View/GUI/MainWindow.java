/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View.GUI;

import View.DeepSpaceView;
import java.util.ArrayList;
import controller.Controller;
import deepspace.GameState;
import deepspace.GameUniverseToUI;
import javax.swing.JOptionPane;

/**
 *
 * @author mario
 */
public class MainWindow extends javax.swing.JFrame implements DeepSpaceView{

    /**
     * Creates new form MainWindow
     */
    public MainWindow() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        botonSalir = new javax.swing.JButton();
        BotonTurno = new javax.swing.JButton();
        botonCombatir = new javax.swing.JButton();
        enemy = new View.GUI.Enemy();
        currentStation = new View.GUI.CurrentStation();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        botonSalir.setText("Salir");
        botonSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonSalirActionPerformed(evt);
            }
        });

        BotonTurno.setText("Siguiente turno");
        BotonTurno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonTurnoActionPerformed(evt);
            }
        });

        botonCombatir.setText("Combatir");
        botonCombatir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCombatirActionPerformed(evt);
            }
        });

        enemy.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        currentStation.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(currentStation, javax.swing.GroupLayout.DEFAULT_SIZE, 649, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(BotonTurno)
                        .addGap(125, 125, 125)
                        .addComponent(botonSalir))
                    .addComponent(botonCombatir, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(enemy, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(currentStation, javax.swing.GroupLayout.DEFAULT_SIZE, 605, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(enemy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(49, 49, 49)
                        .addComponent(botonCombatir, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(BotonTurno)
                            .addComponent(botonSalir))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botonSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonSalirActionPerformed
        Controller.getInstance().finish(0);
    }//GEN-LAST:event_botonSalirActionPerformed

    private void BotonTurnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonTurnoActionPerformed
        Controller.getInstance().nextTurn();
        updateView();
    }//GEN-LAST:event_BotonTurnoActionPerformed

    private void botonCombatirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonCombatirActionPerformed
        Controller.getInstance().combat();
        updateView();
    }//GEN-LAST:event_botonCombatirActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainWindow().setVisible(true);
            }
        });
    }

    @Override
    public void updateView() {
        botonCombatir.setEnabled(Controller.getInstance().getState()==GameState.INIT || Controller.getInstance().getState()==GameState.BEFORECOMBAT);
        BotonTurno.setEnabled(Controller.getInstance().getState()==GameState.AFTERCOMBAT);
        
        GameUniverseToUI ui = Controller.getInstance().getUIversion();
        enemy.updateComponent(ui.getCurrentEnemy());
        currentStation.updateComponent(ui.getCurrentStation());
        
        //Refresh
        revalidate();
        repaint();
    }

    @Override
    public void showView() {
        setVisible(true);
    }

    @Override
    public ArrayList<String> readNamePlayers() {
        NameCapture capture = new NameCapture(this);
        return capture.getNames();
    }

    @Override
    public boolean confirmExitMessage() {
       return (JOptionPane.showConfirmDialog(this, "¿Estás segur@ que deseas salir?", "DeepSpace mola mogollon", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION);
    }

    @Override
    public void nextTurnNotAllowedMessage() {
        JOptionPane.showMessageDialog(this, "No se puede pasar de turno, a ver si miramos antes de pulsar");
    }

    @Override
    public void lostCombatMessage() {
        JOptionPane.showMessageDialog(this, "Has perdido el combate. Suerte la proxima vez");
    }

    @Override
    public void escapeMessage() {
        JOptionPane.showMessageDialog(this, "Has escapado del combate, has tenido suerte");
    }

    @Override
    public void wonCombatMessage() {
        JOptionPane.showMessageDialog(this, "Menuda paliza le has metido a tu enemigo, has ganado el combate!");
    }

    @Override
    public void wonGameMessage() {
        JOptionPane.showMessageDialog(this, "Has ganado la partida, enseñale a tus amigos a jugar bien anda");
    }

    @Override
    public void conversionMessage() {
        JOptionPane.showMessageDialog(this, "Ganas y te transformas, menudo combo");
    }

    @Override
    public void noCombatMessage() {
        JOptionPane.showMessageDialog(this, "No puedes combatir en este momento");
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BotonTurno;
    private javax.swing.JButton botonCombatir;
    private javax.swing.JButton botonSalir;
    private View.GUI.CurrentStation currentStation;
    private View.GUI.Enemy enemy;
    // End of variables declaration//GEN-END:variables
}
